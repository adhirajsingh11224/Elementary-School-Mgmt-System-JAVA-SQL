/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package elementaryschoolmanagementsystem;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ASUS
 */
public class HomeroomDetails extends javax.swing.JFrame  {
    private  int studentID;
    DefaultTableModel data;
    
    public HomeroomDetails() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        this.getStudentID();// fetching details of students that are a part of homeroom class
        this.getTableData();//to fetch all entries
        
        
    }
public void getStudentID(){
    
    String homeroom_class=this.getHomeRoom();
    try{
                Class.forName("java.sql.DriverManager");
                Connection con = Db_Connection.connectDbMethod(); 
                Statement st=con.createStatement(); 
                ResultSet rs=st.executeQuery("select * from student_details where class='"+homeroom_class+"'");
                while(rs.next()){
                    ID_combo.addItem(Integer.toString(rs.getInt(1)));
                }
        }catch(Exception e){
          e.printStackTrace();
    }
    
}

public String getHomeRoom(){
    String homeroom_class=null;
     try{
                Class.forName("java.sql.DriverManager");
                Connection con = Db_Connection.connectDbMethod(); 
                Statement st=con.createStatement(); 
                ResultSet rs=st.executeQuery("select homeroom_class from teacher_details where id="+LoginPage.id);
                if(rs.next()){
                   homeroom_class=rs.getString(1);
                   System.out.println("---"+homeroom_class);
                }
                
                
    }catch(Exception e){
        e.printStackTrace();
    }
     return homeroom_class;
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void insertData(){
        DefaultTableModel model = (DefaultTableModel) table.getModel();

        int month = this.month_chooser.getMonth();
        String monthName = null;

        switch (month)// checking what month it is using switch crit C
        {
            case 0:
                monthName = "January";
                break;
            case 1:
                monthName = "feb";
                break;
            case 2:
                monthName = "mar";
                break;
            case 3:
                monthName = "april";
                break;
            case 4:
                monthName = "may";
                break;
            case 5:
                monthName = "june";
                break;
            case 6:
                monthName = "july";
                break;
            case 7:
                monthName = "august";
                break;
            case 8:
                monthName = "september";
                break;
            case 9:
                monthName = "october";
                break;
            case 10:
                monthName = "november";
                break;
            case 11:
                monthName = "december";
                break;

        }

         int year = this.year_chooser.getYear();
         boolean flag = false;
         boolean gradeflag;
         int x = 0;
         int avg = 0;
        
         
           try {
            Class.forName("java.sql.DriverManager");
            Connection con = Db_Connection.connectDbMethod();

            
            Statement st[] = new Statement[model.getRowCount()];
            for (int i = 0; i < model.getRowCount(); i++) {

                st[i] = con.createStatement();
                int id = Integer.parseInt(data.getValueAt(i,0).toString());
                int regularity = Integer.parseInt(data.getValueAt(i,2).toString());
                int communication = Integer.parseInt(data.getValueAt(i,3).toString());
                int uniform = Integer.parseInt(data.getValueAt(i,4).toString());
                int overallScore = ((int)(regularity+communication+uniform));
                
                       
                // VALIDATION FOR GRADES NOT BEING LOWER THAN 0 OR HIGHER THAN 5 
                // THE VALIDATION IS FLEXIBLE AND ALLOWS YOU TO ADD GRADES WHERE THEY LIE IN ACCEPTABE RANGE FOR EACH ROW, 
                //ONLY WRONG ROW WILL NOT BE INPUTTED - MAKING THE SOFTWARE CONVINIENT TO USE
                //THE VALIDATION TELLS YOU WHAT STUDENT ID DID YOU PUT WRONG VALUES IN    
                if(regularity >5 || regularity <0){
                    gradeflag = false;
                    
                }else if (communication > 5|| communication <0){
                    gradeflag = false;
                }else if (uniform > 5|| uniform <0){
                    gradeflag = false;
                }else{
                    gradeflag = true;
                }
                       
                if(gradeflag == true){// insert values into database if grades are <6 and >-1
                x = st[i].executeUpdate("insert into  homeroom_details  values(" +id + "," + regularity + "," + communication + "," + uniform + "," + overallScore + ",'" + monthName + "'," + year + ") ");
                }else{
                    JOptionPane.showMessageDialog(this, " re enter grades whithin the 0 to 5 grade boundary again for student with ID "+id);
                    
                }
            }
            if (x > 0) {

                JOptionPane.showMessageDialog(this, "All Marks within acceptable boundary for student ID " + this.ID_combo.getSelectedItem().toString() + " inserted in database successfully");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "There was an error, please try again");
        }
         
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        print_btn = new javax.swing.JButton();
        back_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        save_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        back_btn3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ID_combo = new javax.swing.JComboBox();
        viewAll_btn = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        month_chooser = new com.toedter.calendar.JMonthChooser();
        year_chooser = new com.toedter.calendar.JYearChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Class Teacher's Record", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 683, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 255));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Elementary School Manager");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1278, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel6)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        print_btn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        print_btn.setText("Print");

        back_btn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        back_btn.setText("Back");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Student Name", "Regularity ", "Communicating well in English", "Proper Uniform"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        save_btn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        save_btn.setText("Save");
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Class Teacher's Record");

        back_btn3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        back_btn3.setText("Back");
        back_btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btn3ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Search a student by ID"));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        jLabel2.setText("Student ID");

        ID_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Id" }));
        ID_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ID_comboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(ID_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ID_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        viewAll_btn.setText("View all");
        viewAll_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAll_btnActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(204, 204, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Grade By Month and Year"));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        jLabel5.setText("Month ");

        jLabel7.setBackground(new java.awt.Color(204, 204, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        jLabel7.setText("Year");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(month_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(year_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(year_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(back_btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(viewAll_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1610, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(print_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1275, 1275, 1275)
                .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(back_btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(viewAll_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(388, 388, 388)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(print_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1719, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
        this.calculateScore();
        this.insertData();
    }//GEN-LAST:event_save_btnActionPerformed
public void updateDatabase(int avg,int studentID){// ERROR HERE
    
    
                try{
                     Class.forName("java.sql.DriverManager");
                        Connection con = Db_Connection.connectDbMethod(); 
                        Statement st=con.createStatement(); 
                        ResultSet r=st.executeQuery("select * from student_details");
                        int y=0;
                        while(r.next()){
                            if( studentID== r.getInt("id")) 
                               y=st.executeUpdate("update student_details set homeroom_score ="+avg+" where  id = "+studentID+" " );
                        }
                       }catch(Exception e) {
                           
                          e.printStackTrace(); }
             
}
    public void calculateScore(){// to calculate the average overall score for a student out 5
        data=(DefaultTableModel)table.getModel();
        int rows=data.getRowCount();
        System.out.println("total rows are "+rows);
        int avg = 0;
        
        for (int i=0;i<rows;i++)
        {
            int studentidd = Integer.parseInt(data.getValueAt(i,0).toString());
            System.out.println("id= "+studentidd);
           
            int regularity = Integer.parseInt(data.getValueAt(i,2).toString());
            int communication = Integer.parseInt(data.getValueAt(i,3).toString());
            int uniform = Integer.parseInt(data.getValueAt(i,4).toString());
            
            avg = (regularity+communication+uniform);
            this.updateDatabase(avg,studentidd);
            
                
            }
                
}
    private void back_btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btn3ActionPerformed
        // TODO add your handling code here:
           ClassTeacherDashboard db=new ClassTeacherDashboard();
           db.setVisible(true);
           this.dispose();
    }//GEN-LAST:event_back_btn3ActionPerformed
public void getTableData(){
    data=(DefaultTableModel)table.getModel();
       data.setRowCount(0);
       String homeroom_class=this.getHomeRoom();
         try{
                Class.forName("java.sql.DriverManager");
                Connection con = Db_Connection.connectDbMethod(); 
                Statement st=con.createStatement(); 
                ResultSet rs=st.executeQuery("select * from student_details where class='"+homeroom_class+"'");
                while(rs.next()){
                     String name=rs.getString(2)+" "+rs.getString(3);
                    data.addRow(new Object[]{rs.getInt(1),name});
                    }
    
    }catch(Exception e){
        
        e.printStackTrace();
    }
}
    private void ID_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ID_comboActionPerformed
       this.studentID=Integer.parseInt(this.ID_combo.getSelectedItem().toString());
       data=(DefaultTableModel)table.getModel();
       data.setRowCount(0);
         try{
                Class.forName("java.sql.DriverManager");
                Connection con = Db_Connection.connectDbMethod(); 
                Statement st=con.createStatement(); 
                ResultSet rs=st.executeQuery("select * from student_details where id="+ this.studentID);
                if(rs.next()){
                    
                    String name=rs.getString(2)+" "+rs.getString(3);
                    data.addRow(new Object[]{this.studentID,name});
                    
                    
                   
                }
    
    }catch(Exception e){
        
        e.printStackTrace();
    }
        
        
        
        
        
    }//GEN-LAST:event_ID_comboActionPerformed

    private void viewAll_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAll_btnActionPerformed
        this.getTableData();
    }//GEN-LAST:event_viewAll_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeroomDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeroomDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeroomDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeroomDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeroomDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ID_combo;
    private javax.swing.JButton back_btn;
    private javax.swing.JButton back_btn3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JMonthChooser month_chooser;
    private javax.swing.JButton print_btn;
    private javax.swing.JButton save_btn;
    private javax.swing.JTable table;
    private javax.swing.JButton viewAll_btn;
    private com.toedter.calendar.JYearChooser year_chooser;
    // End of variables declaration//GEN-END:variables

}
